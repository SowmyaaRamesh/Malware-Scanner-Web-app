
import os
import numpy as np
import io
import math
from PIL import Image

def convertToImageAndSave(array):
    if array.shape[1]!=16: #If not hexadecimal
        assert(False)
    b=int((array.shape[0]*16)**(0.5))
    b=2**(int(math.log(b)/math.log(2))+1)
    a=int(array.shape[0]*16/b)
    array=array[:a*b//16,:]
    array=np.reshape(array,(a,b))
    im = Image.fromarray(np.uint8(array))
    filepath = "./files/"
    im.save(filepath+'testImage.png', "PNG")
    print("Saved Image")

def parse_hex(hexobj):
    array = []
    hexobj = hexobj.split(' ')
    for i in range(len(hexobj)//17):
        try:
            temparr = []
            for j in range(i+1, i+17):
                if hexobj[j]!='??':
                    temparr.append(int(hexobj[j], 16))
                else:
                    temparr.append(0)
            array.append(temparr)
        except:
            continue
    array = np.array(array)
    return array

def preprocessOtherFiles(fpath):
    f=open(fpath,"rb")

    stream_str = io.BytesIO(f.read())
    bytesarray = stream_str.getvalue()
    hexstream = bytesarray.hex(' ')
    array = parse_hex(hexstream)
    convertToImageAndSave(np.array(array))


def preprocessBytesFile(fpath):
    f=open(fpath)
    array=[]
    for line in f:
        xx=line.split()
        if len(xx)!=17:
            continue
        array.append([int(i,16) if i!='??' else 0 for i in xx[1:] ])
    convertToImageAndSave(np.array(array))


def preprocessFile(name):
    fpath = f"./files/{name}"
    if(name[-5:] == 'bytes'):
        preprocessBytesFile(fpath)

    else:
        preprocessOtherFiles(fpath)

    os.remove(fpath)
    
