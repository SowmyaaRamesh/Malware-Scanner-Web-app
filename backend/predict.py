import tensorflow as tf
import numpy as np
from tensorflow import keras
import os
import cv2
from tensorflow.keras.preprocessing import image
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'


def getBinaryPrediction():
    img = image.load_img("./files/testImage.png",target_size=(600,600))
    
    # plt.imshow(img1)
 
    Y = image.img_to_array(img)
    
    X = np.expand_dims(Y,axis=0)
    model = keras.models.load_model('binary_model.h5')
    val = model.predict(X)

    if np.round(val) == 1:
        print("mal")
        return 'Malicious'
    
    elif np.round(val) == 0:
        print("ben")
        return 'Benign'

def getMulticlassPrediction():
    img = image.load_img("./files/testImage.png",target_size=(64,64))

    # plt.imshow(img)
    Y = image.img_to_array(img)
    X = np.expand_dims(Y,axis=0)

    model = keras.models.load_model('multiclass_model.h5')
    val = model.predict(X)

    l = np.round(val).flatten().tolist()
    
    prediction = l.index(1.0)+1

    print(prediction)
    return prediction